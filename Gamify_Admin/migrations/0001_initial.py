# Generated by Django 4.2.7 on 2023-12-18 05:06

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.AutoField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'City',
            },
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('company_id', models.AutoField(primary_key=True, serialize=False)),
                ('company_name', models.CharField(max_length=100)),
                ('company_description', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'Company',
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('game_id', models.AutoField(primary_key=True, serialize=False)),
                ('game_name', models.CharField(max_length=100)),
                ('game_version', models.CharField(max_length=100)),
                ('game_image', models.CharField(max_length=100)),
                ('game_price', models.IntegerField()),
                ('game_launch_date', models.DateField()),
                ('game_quantity', models.IntegerField()),
                ('game_description', models.CharField(max_length=500)),
                ('is_available', models.IntegerField(null=True)),
                ('company_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.company')),
            ],
            options={
                'db_table': 'Game',
            },
        ),
        migrations.CreateModel(
            name='GamifyUser',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_first_name', models.CharField(max_length=100)),
                ('user_last_name', models.CharField(max_length=100)),
                ('user_date_of_birth', models.DateField()),
                ('user_contact', models.CharField(max_length=15)),
                ('user_email', models.EmailField(max_length=254, unique=True)),
                ('user_password', models.CharField(max_length=50)),
                ('is_admin', models.IntegerField(null=True)),
                ('user_otp', models.IntegerField(null=True)),
                ('user_otp_used', models.IntegerField(null=True)),
                ('city_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.city')),
            ],
            options={
                'db_table': 'GamifyUser',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('order_id', models.AutoField(primary_key=True, serialize=False)),
                ('order_date', models.DateField()),
                ('order_status', models.IntegerField()),
                ('order_payment_status', models.IntegerField()),
                ('order_amount', models.IntegerField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.gamifyuser')),
            ],
            options={
                'db_table': 'order',
            },
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('type_id', models.AutoField(primary_key=True, serialize=False)),
                ('type_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'Type',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('wishlist_id', models.AutoField(primary_key=True, serialize=False)),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.game')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.gamifyuser')),
            ],
            options={
                'db_table': 'wishlist',
            },
        ),
        migrations.CreateModel(
            name='OrderDetail',
            fields=[
                ('orderdetail_id', models.AutoField(primary_key=True, serialize=False)),
                ('orderdetail_quantity', models.IntegerField()),
                ('orderdetail_amount', models.IntegerField()),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.game')),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.order')),
            ],
            options={
                'db_table': 'orderdetail',
            },
        ),
        migrations.AddField(
            model_name='game',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.type'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('feedback_id', models.AutoField(primary_key=True, serialize=False)),
                ('feedback_date', models.DateField()),
                ('feedback_des', models.CharField(max_length=500)),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.game')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Gamify_Admin.gamifyuser')),
            ],
            options={
                'db_table': 'feedback',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('cart_id', models.AutoField(primary_key=True, serialize=False)),
                ('cart_quantity', models.IntegerField()),
                ('cart_amount', models.IntegerField()),
                ('cart_added_date', models.DateField()),
                ('game_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Gamify_Admin.game')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='Gamify_Admin.gamifyuser')),
            ],
            options={
                'db_table': 'cart',
            },
        ),
    ]
